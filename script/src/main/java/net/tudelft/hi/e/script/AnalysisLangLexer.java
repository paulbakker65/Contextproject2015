// Generated from /Users/mawdegroot/Programming/antlr/AnalysisLang.g4 by ANTLR 4.1

package net.tudelft.hi.e.script;

import java.util.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AnalysisLangLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__24=1, T__23=2, T__22=3, T__21=4, T__20=5, T__19=6, T__18=7, T__17=8, 
		T__16=9, T__15=10, T__14=11, T__13=12, T__12=13, T__11=14, T__10=15, T__9=16, 
		T__8=17, T__7=18, T__6=19, T__5=20, T__4=21, T__3=22, T__2=23, T__1=24, 
		T__0=25, ID=26, EQ=27, NEQ=28, GEQ=29, G=30, LEQ=31, L=32, MULTIPLY=33, 
		DIVIDE=34, PLUS=35, MINUS=36, MODULO=37, AVG=38, COUNT=39, MAX=40, MIN=41, 
		SUM=42, STDDEV=43, NUMBER=44, WS=45, STRING=46, CHAR=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'LSA'", "'AS'", "'CONSTRAINT'", "'COMPARE'", "'USING'", "'AND'", "'{'", 
		"'ON'", "'}'", "'CODE'", "'BETWEEN'", "'FOR EACH CHUNK'", "'CONNECT'", 
		"'CHUNK'", "'MONTH'", "'TO'", "'DAY'", "'].['", "'['", "']'", "'YEAR'", 
		"'COMPUTE'", "')'", "'CONVERT'", "'DATE('", "ID", "'=='", "'!='", "'>='", 
		"'>'", "'<='", "'<'", "'*'", "'/'", "'+'", "'-'", "'%'", "'AVG'", "'COUNT'", 
		"'MAX'", "'MIN'", "'SUM'", "'STDDEV'", "NUMBER", "WS", "STRING", "CHAR"
	};
	public static final String[] ruleNames = {
		"T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", 
		"T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", 
		"T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", 
		"ID", "EQ", "NEQ", "GEQ", "G", "LEQ", "L", "MULTIPLY", "DIVIDE", "PLUS", 
		"MINUS", "MODULO", "AVG", "COUNT", "MAX", "MIN", "SUM", "STDDEV", "NUMBER", 
		"INT", "FLOAT", "WS", "STRING", "CHAR", "EXPONENT", "HEX_NUM", "ESC_SEQ"
	};


	public AnalysisLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AnalysisLang.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 46: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: _channel = HIDDEN;  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\61\u017c\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6"+
		"\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\13\3"+
		"\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21"+
		"\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26"+
		"\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33"+
		"\3\33\7\33\u00f5\n\33\f\33\16\33\u00f8\13\33\3\34\3\34\3\34\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3"+
		"%\3&\3&\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3*\3*\3+\3"+
		"+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3-\3-\5-\u0133\n-\3.\6.\u0136\n.\r.\16.\u0137"+
		"\3/\6/\u013b\n/\r/\16/\u013c\3/\3/\7/\u0141\n/\f/\16/\u0144\13/\3/\5/"+
		"\u0147\n/\3/\3/\6/\u014b\n/\r/\16/\u014c\3/\5/\u0150\n/\3/\6/\u0153\n"+
		"/\r/\16/\u0154\3/\5/\u0158\n/\3\60\3\60\3\60\3\60\3\61\3\61\3\61\7\61"+
		"\u0161\n\61\f\61\16\61\u0164\13\61\3\61\3\61\3\62\3\62\3\62\5\62\u016b"+
		"\n\62\3\62\3\62\3\63\3\63\5\63\u0171\n\63\3\63\6\63\u0174\n\63\r\63\16"+
		"\63\u0175\3\64\3\64\3\65\3\65\3\65\2\66\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1"+
		"\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37"+
		"\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1"+
		"\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1"+
		"Q*\1S+\1U,\1W-\1Y.\1[\2\1]\2\1_/\2a\60\1c\61\1e\2\1g\2\1i\2\1\3\2\13\5"+
		"\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17\"\"\4\2$$^^\4\2))^^\4\2GGgg\4"+
		"\2--//\5\2\62;CHch\n\2$$))^^ddhhppttvv\u0186\2\3\3\2\2\2\2\5\3\2\2\2\2"+
		"\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2"+
		"\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2"+
		"\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2"+
		"\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2"+
		"\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2"+
		"\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2"+
		"M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3"+
		"\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\3k\3\2\2\2\5o\3\2\2\2\7r\3\2\2"+
		"\2\t}\3\2\2\2\13\u0085\3\2\2\2\r\u008b\3\2\2\2\17\u008f\3\2\2\2\21\u0091"+
		"\3\2\2\2\23\u0094\3\2\2\2\25\u0096\3\2\2\2\27\u009b\3\2\2\2\31\u00a3\3"+
		"\2\2\2\33\u00b2\3\2\2\2\35\u00ba\3\2\2\2\37\u00c0\3\2\2\2!\u00c6\3\2\2"+
		"\2#\u00c9\3\2\2\2%\u00cd\3\2\2\2\'\u00d1\3\2\2\2)\u00d3\3\2\2\2+\u00d5"+
		"\3\2\2\2-\u00da\3\2\2\2/\u00e2\3\2\2\2\61\u00e4\3\2\2\2\63\u00ec\3\2\2"+
		"\2\65\u00f2\3\2\2\2\67\u00f9\3\2\2\29\u00fc\3\2\2\2;\u00ff\3\2\2\2=\u0102"+
		"\3\2\2\2?\u0104\3\2\2\2A\u0107\3\2\2\2C\u0109\3\2\2\2E\u010b\3\2\2\2G"+
		"\u010d\3\2\2\2I\u010f\3\2\2\2K\u0111\3\2\2\2M\u0113\3\2\2\2O\u0117\3\2"+
		"\2\2Q\u011d\3\2\2\2S\u0121\3\2\2\2U\u0125\3\2\2\2W\u0129\3\2\2\2Y\u0132"+
		"\3\2\2\2[\u0135\3\2\2\2]\u0157\3\2\2\2_\u0159\3\2\2\2a\u015d\3\2\2\2c"+
		"\u0167\3\2\2\2e\u016e\3\2\2\2g\u0177\3\2\2\2i\u0179\3\2\2\2kl\7N\2\2l"+
		"m\7U\2\2mn\7C\2\2n\4\3\2\2\2op\7C\2\2pq\7U\2\2q\6\3\2\2\2rs\7E\2\2st\7"+
		"Q\2\2tu\7P\2\2uv\7U\2\2vw\7V\2\2wx\7T\2\2xy\7C\2\2yz\7K\2\2z{\7P\2\2{"+
		"|\7V\2\2|\b\3\2\2\2}~\7E\2\2~\177\7Q\2\2\177\u0080\7O\2\2\u0080\u0081"+
		"\7R\2\2\u0081\u0082\7C\2\2\u0082\u0083\7T\2\2\u0083\u0084\7G\2\2\u0084"+
		"\n\3\2\2\2\u0085\u0086\7W\2\2\u0086\u0087\7U\2\2\u0087\u0088\7K\2\2\u0088"+
		"\u0089\7P\2\2\u0089\u008a\7I\2\2\u008a\f\3\2\2\2\u008b\u008c\7C\2\2\u008c"+
		"\u008d\7P\2\2\u008d\u008e\7F\2\2\u008e\16\3\2\2\2\u008f\u0090\7}\2\2\u0090"+
		"\20\3\2\2\2\u0091\u0092\7Q\2\2\u0092\u0093\7P\2\2\u0093\22\3\2\2\2\u0094"+
		"\u0095\7\177\2\2\u0095\24\3\2\2\2\u0096\u0097\7E\2\2\u0097\u0098\7Q\2"+
		"\2\u0098\u0099\7F\2\2\u0099\u009a\7G\2\2\u009a\26\3\2\2\2\u009b\u009c"+
		"\7D\2\2\u009c\u009d\7G\2\2\u009d\u009e\7V\2\2\u009e\u009f\7Y\2\2\u009f"+
		"\u00a0\7G\2\2\u00a0\u00a1\7G\2\2\u00a1\u00a2\7P\2\2\u00a2\30\3\2\2\2\u00a3"+
		"\u00a4\7H\2\2\u00a4\u00a5\7Q\2\2\u00a5\u00a6\7T\2\2\u00a6\u00a7\7\"\2"+
		"\2\u00a7\u00a8\7G\2\2\u00a8\u00a9\7C\2\2\u00a9\u00aa\7E\2\2\u00aa\u00ab"+
		"\7J\2\2\u00ab\u00ac\7\"\2\2\u00ac\u00ad\7E\2\2\u00ad\u00ae\7J\2\2\u00ae"+
		"\u00af\7W\2\2\u00af\u00b0\7P\2\2\u00b0\u00b1\7M\2\2\u00b1\32\3\2\2\2\u00b2"+
		"\u00b3\7E\2\2\u00b3\u00b4\7Q\2\2\u00b4\u00b5\7P\2\2\u00b5\u00b6\7P\2\2"+
		"\u00b6\u00b7\7G\2\2\u00b7\u00b8\7E\2\2\u00b8\u00b9\7V\2\2\u00b9\34\3\2"+
		"\2\2\u00ba\u00bb\7E\2\2\u00bb\u00bc\7J\2\2\u00bc\u00bd\7W\2\2\u00bd\u00be"+
		"\7P\2\2\u00be\u00bf\7M\2\2\u00bf\36\3\2\2\2\u00c0\u00c1\7O\2\2\u00c1\u00c2"+
		"\7Q\2\2\u00c2\u00c3\7P\2\2\u00c3\u00c4\7V\2\2\u00c4\u00c5\7J\2\2\u00c5"+
		" \3\2\2\2\u00c6\u00c7\7V\2\2\u00c7\u00c8\7Q\2\2\u00c8\"\3\2\2\2\u00c9"+
		"\u00ca\7F\2\2\u00ca\u00cb\7C\2\2\u00cb\u00cc\7[\2\2\u00cc$\3\2\2\2\u00cd"+
		"\u00ce\7_\2\2\u00ce\u00cf\7\60\2\2\u00cf\u00d0\7]\2\2\u00d0&\3\2\2\2\u00d1"+
		"\u00d2\7]\2\2\u00d2(\3\2\2\2\u00d3\u00d4\7_\2\2\u00d4*\3\2\2\2\u00d5\u00d6"+
		"\7[\2\2\u00d6\u00d7\7G\2\2\u00d7\u00d8\7C\2\2\u00d8\u00d9\7T\2\2\u00d9"+
		",\3\2\2\2\u00da\u00db\7E\2\2\u00db\u00dc\7Q\2\2\u00dc\u00dd\7O\2\2\u00dd"+
		"\u00de\7R\2\2\u00de\u00df\7W\2\2\u00df\u00e0\7V\2\2\u00e0\u00e1\7G\2\2"+
		"\u00e1.\3\2\2\2\u00e2\u00e3\7+\2\2\u00e3\60\3\2\2\2\u00e4\u00e5\7E\2\2"+
		"\u00e5\u00e6\7Q\2\2\u00e6\u00e7\7P\2\2\u00e7\u00e8\7X\2\2\u00e8\u00e9"+
		"\7G\2\2\u00e9\u00ea\7T\2\2\u00ea\u00eb\7V\2\2\u00eb\62\3\2\2\2\u00ec\u00ed"+
		"\7F\2\2\u00ed\u00ee\7C\2\2\u00ee\u00ef\7V\2\2\u00ef\u00f0\7G\2\2\u00f0"+
		"\u00f1\7*\2\2\u00f1\64\3\2\2\2\u00f2\u00f6\t\2\2\2\u00f3\u00f5\t\3\2\2"+
		"\u00f4\u00f3\3\2\2\2\u00f5\u00f8\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7"+
		"\3\2\2\2\u00f7\66\3\2\2\2\u00f8\u00f6\3\2\2\2\u00f9\u00fa\7?\2\2\u00fa"+
		"\u00fb\7?\2\2\u00fb8\3\2\2\2\u00fc\u00fd\7#\2\2\u00fd\u00fe\7?\2\2\u00fe"+
		":\3\2\2\2\u00ff\u0100\7@\2\2\u0100\u0101\7?\2\2\u0101<\3\2\2\2\u0102\u0103"+
		"\7@\2\2\u0103>\3\2\2\2\u0104\u0105\7>\2\2\u0105\u0106\7?\2\2\u0106@\3"+
		"\2\2\2\u0107\u0108\7>\2\2\u0108B\3\2\2\2\u0109\u010a\7,\2\2\u010aD\3\2"+
		"\2\2\u010b\u010c\7\61\2\2\u010cF\3\2\2\2\u010d\u010e\7-\2\2\u010eH\3\2"+
		"\2\2\u010f\u0110\7/\2\2\u0110J\3\2\2\2\u0111\u0112\7\'\2\2\u0112L\3\2"+
		"\2\2\u0113\u0114\7C\2\2\u0114\u0115\7X\2\2\u0115\u0116\7I\2\2\u0116N\3"+
		"\2\2\2\u0117\u0118\7E\2\2\u0118\u0119\7Q\2\2\u0119\u011a\7W\2\2\u011a"+
		"\u011b\7P\2\2\u011b\u011c\7V\2\2\u011cP\3\2\2\2\u011d\u011e\7O\2\2\u011e"+
		"\u011f\7C\2\2\u011f\u0120\7Z\2\2\u0120R\3\2\2\2\u0121\u0122\7O\2\2\u0122"+
		"\u0123\7K\2\2\u0123\u0124\7P\2\2\u0124T\3\2\2\2\u0125\u0126\7U\2\2\u0126"+
		"\u0127\7W\2\2\u0127\u0128\7O\2\2\u0128V\3\2\2\2\u0129\u012a\7U\2\2\u012a"+
		"\u012b\7V\2\2\u012b\u012c\7F\2\2\u012c\u012d\7F\2\2\u012d\u012e\7G\2\2"+
		"\u012e\u012f\7X\2\2\u012fX\3\2\2\2\u0130\u0133\5[.\2\u0131\u0133\5]/\2"+
		"\u0132\u0130\3\2\2\2\u0132\u0131\3\2\2\2\u0133Z\3\2\2\2\u0134\u0136\4"+
		"\62;\2\u0135\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u0135\3\2\2\2\u0137"+
		"\u0138\3\2\2\2\u0138\\\3\2\2\2\u0139\u013b\4\62;\2\u013a\u0139\3\2\2\2"+
		"\u013b\u013c\3\2\2\2\u013c\u013a\3\2\2\2\u013c\u013d\3\2\2\2\u013d\u013e"+
		"\3\2\2\2\u013e\u0142\7\60\2\2\u013f\u0141\4\62;\2\u0140\u013f\3\2\2\2"+
		"\u0141\u0144\3\2\2\2\u0142\u0140\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0146"+
		"\3\2\2\2\u0144\u0142\3\2\2\2\u0145\u0147\5e\63\2\u0146\u0145\3\2\2\2\u0146"+
		"\u0147\3\2\2\2\u0147\u0158\3\2\2\2\u0148\u014a\7\60\2\2\u0149\u014b\4"+
		"\62;\2\u014a\u0149\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014a\3\2\2\2\u014c"+
		"\u014d\3\2\2\2\u014d\u014f\3\2\2\2\u014e\u0150\5e\63\2\u014f\u014e\3\2"+
		"\2\2\u014f\u0150\3\2\2\2\u0150\u0158\3\2\2\2\u0151\u0153\4\62;\2\u0152"+
		"\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3\2"+
		"\2\2\u0155\u0156\3\2\2\2\u0156\u0158\5e\63\2\u0157\u013a\3\2\2\2\u0157"+
		"\u0148\3\2\2\2\u0157\u0152\3\2\2\2\u0158^\3\2\2\2\u0159\u015a\t\4\2\2"+
		"\u015a\u015b\3\2\2\2\u015b\u015c\b\60\2\2\u015c`\3\2\2\2\u015d\u0162\7"+
		"$\2\2\u015e\u0161\5i\65\2\u015f\u0161\n\5\2\2\u0160\u015e\3\2\2\2\u0160"+
		"\u015f\3\2\2\2\u0161\u0164\3\2\2\2\u0162\u0160\3\2\2\2\u0162\u0163\3\2"+
		"\2\2\u0163\u0165\3\2\2\2\u0164\u0162\3\2\2\2\u0165\u0166\7$\2\2\u0166"+
		"b\3\2\2\2\u0167\u016a\7)\2\2\u0168\u016b\5i\65\2\u0169\u016b\n\6\2\2\u016a"+
		"\u0168\3\2\2\2\u016a\u0169\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u016d\7)"+
		"\2\2\u016dd\3\2\2\2\u016e\u0170\t\7\2\2\u016f\u0171\t\b\2\2\u0170\u016f"+
		"\3\2\2\2\u0170\u0171\3\2\2\2\u0171\u0173\3\2\2\2\u0172\u0174\4\62;\2\u0173"+
		"\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0173\3\2\2\2\u0175\u0176\3\2"+
		"\2\2\u0176f\3\2\2\2\u0177\u0178\t\t\2\2\u0178h\3\2\2\2\u0179\u017a\7^"+
		"\2\2\u017a\u017b\t\n\2\2\u017bj\3\2\2\2\22\2\u00f6\u0132\u0137\u013c\u0142"+
		"\u0146\u014c\u014f\u0154\u0157\u0160\u0162\u016a\u0170\u0175";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}